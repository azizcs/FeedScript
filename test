export default async function ({ execution_id }) {
  const { violations, threshold } = await executionsClient.getTaskExecutionResult({
    execution_id,
    id: "predict_disk_full_capacity" // Your prediction task ID
  });

  // Build HTML content
  let html = `
    <h3>Disk Capacity Forecast</h3>
    <table border="1" style="border-collapse:collapse">
      <tr>
        <th>Disk</th><th>Host</th><th>Current</th><th>Days Left</th><th>Full On</th>
      </tr>
  `;

  violations?.forEach(v => {
    html += `
      <tr>
        <td>${v.diskName}</td>
        <td>${v.hostName}</td>
        <td>${v.currentUsage}%</td>
        <td>${v.daysUntilFull}</td>
        <td>${new Date(v.predictedDate).toLocaleDateString()}</td>
      </tr>
    `;
  });

  html += violations?.length
    ? `</table><p>Threshold: ${threshold}%</p>`
    : `<tr><td colspan="5">No disks predicted to reach full capacity</td></tr></table>`;

  return {
    subject: `[Disk Alert] ${violations?.length || 0} disks reaching capacity`,
    body: html,
    isHtml: true
  };
}



To	your-team@company.com (hardcoded or use a variable)
Subject	{{format_disk_email.result.subject}}
Body	{{format_disk_email.result.body}}
Is HTML	{{format_disk_email.result.isHtml}}



{
  "violations": [{
    "diskName": "sda1",
    "hostName": "prod-db-01",
    "currentUsage": 85,
    "daysUntilFull": 14,
    "predictedDate": "2023-12-25T00:00:00Z"
  }],
  "threshold": 80
}